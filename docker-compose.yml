#version: '3.8'
services:

  # keycloak
  keycloak:
    container_name: keycloak3
    hostname: keycloak
    image: quay.io/keycloak/keycloak:24.0.1
    command: [ "start-dev", "--import-realm" ]
    environment:
      DB_VENDOR: postgres
      DB_ADDR: postgres-keycloak
      DB_DATABASE: keycloak
      DB_USER: admin
      DB_PASSWORD: password
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: password
      ROOT_LOGLEVEL: DEBUG
      JBOSS_LOG_MANAGER_ROOT_LOGGER: DEBUG, stdout, FILE
    ports:
      - "8080:8080"
    volumes:
      - ./local-docker-file/keycloak/realms/:/opt/keycloak/data/import/
    depends_on:
      - postgres-keycloak
    networks:
      - app_network


  #api-gateway
  api-gateway:
    image: api-gateway
    ports:
      - "9000:9000"
    build:
      context: ./api-gateway
      dockerfile: ./Dockerfile
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_APPLICATION_JSON: '{"logging":{"level":{"root":"INFO","ca.gbc.apigateway":"DEBUG"}}}'
    container_name: api-gateway3
    networks:
      - spring

  # PostgresSQL for UserService
  user-db:
    image: postgres:latest
    container_name: user_db
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: user-service
    ports:
      - "5432:5432"
    volumes:
      - ./data/postgres/users:/var/lib/postgresql/data
    networks:
      - app_network


  # PostgreSQL for RoomService
  room-db:
    image: postgres:latest
    container_name: room_db
    environment:
      - POSTGRES_DB=room-service
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=password
      - PGDATA=/data/postgres
    ports:
      - "5435:5432"
    volumes:
      - ./data/postgres/room-db:/var/lib/postgresql/data
      - ./init/postgres/room/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - spring


  # MongoDB for EventService
  event-db:
    image: mongo:latest
    container_name: event_db
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - ./data/mongo/events:/data/db
      - ./init/mongo/docker-entrypoint-initdb.d/event-init.js:/docker-entrypoint-initdb.d/event-init.js
    ports:
      - "27018:27017"
    networks:
      - app_network


  #MongoDB for ApprovalService
  approval-db:
    image: mongo:latest
    container_name: approval_db
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - ./data/mongo/approvals:/data/db
    ports:
      - "27019:27017"
    networks:
      - app_network


  # MongoDB for BookingService
  booking-db:
    image: postgres
    container_name: booking_db
    environment:
      - POSTGRES_DB=booking-service
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=password
      - PGDATA=/data/postgres
    volumes:
      - ./data/postgres/booking-db:/var/lib/postgresql/data
      - ./init/postgres/booking/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "27020:27017"
    networks:
      - app_network


  postgres-keycloak:
    container_name: postgres-keycloak3
    image: postgres
    environment:
      - POSTGRES_DB=keycloak
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=password
      - PGDATA=/data/postgres
    volumes:
      - ./data/postgres/postgres-keycloak:/var/lib/postgresql/data
    ports:
      - "5431:5432"
    networks:
      - spring


  # pgAdmin
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin_app
    environment:
      PGADMIN_DEFAULT_EMAIL: user@domain.ca
      PGADMIN_DEFAULT_PASSWORD: password
    ports:
      - "8889:80"
    networks:
      - app_network




  mongodb:
    container_name: mongodb3
    image: mongo:latest
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
    volumes:
      - mongo-db:/data/db
      - ./init/mongo/docker-entrypoint-initdb.d/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - spring

  # Mongo Express for all Services
  mongo-express:
    image: mongo-express
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=password
      - ME_CONFIG_MONGODB_SERVER=approval-db
      - ME_CONFIG_MONGODB_URL_event_db=mongodb://admin:password@event-db:27017
      - ME_CONFIG_MONGODB_URL_booking_db=mongodb://admin:password@booking-db:27017
    container_name: mongo_express_pkg
    depends_on:
      - mongodb
    networks:
      - app_network

volumes:
  mongo-db:
    driver: local

networks:
  app_network:
    driver: bridge
  spring:
    driver: bridge